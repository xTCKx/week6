---
name: create infrastructure
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  linting:
    runs-on: self-hosted
    steps:
      - name: checkout repository
        uses: actions/checkout@v5

      - name: set up python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - name: install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install ansible ansible-lint yamllint

      - name: run YAML lint
        run: yamllint .

      - name: run Ansible lint
        run: ansible-lint ansible/docker.yml

      - name: install Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '24'

      - name: set up terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.13.3'

      - name: terraform init
        working-directory: terraform
        run: terraform init -backend=false 

      - name: terraform fmt check
        working-directory: terraform
        run: terraform fmt -check -diff

      - name: terraform validate
        working-directory: terraform
        run: terraform validate

  policy_check:
    name: terraform policy check
    runs-on: self-hosted
    steps:
      - name: checkout
        uses: actions/checkout@v5

      - name: set up python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - name: install checkov
        run: |
          python -m pip install --upgrade pip
          pip install checkov

      - name: run checkov terraform
        working-directory: terraform
        run: |
          checkov --directory . --framework terraform \
            --output cli --output junitxml \
            --output-file-path console,checkov-report.xml
        continue-on-error: true

      - name: run checkov ansible
        run: |
          checkov --directory ansible --framework ansible \
            --output cli
        continue-on-error: true

      - name: upload security scan results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-scan-results
          path: terraform/checkov-report.xml

  deploy:
    runs-on: self-hosted
    needs: [linting, policy_check]
    if: ${{ success() }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v5

      - name: set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - name: install ansible en dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: install Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '24'

      - name: set up terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.13.3'
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: terraform init
        working-directory: terraform
        run: terraform init

      - name: terraform apply
        working-directory: terraform
        run: terraform apply -auto-approve

      - name: upload inventory file als artifact
        uses: actions/upload-artifact@v4
        with:
          name: ansible-inventory
          path: ansible/inventory.ini

      - name: install ansible requirements
        run: |
          ansible-galaxy install -r ansible/requirements.yml

      - name: run ansible playbook
        run: |
          ansible-playbook -i ansible/inventory.ini ansible/docker.yml
